# This is a basic workflow to help you get started with Actions

name: Build&Push image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Base:
    runs-on: eoeair-arc
    container:
      image: ghcr.nju.edu.cn/kaniko-build/dist/chainguard-dev-kaniko/executor:latest-debug
    strategy:
      matrix:
        tag: [alpine, debian, debian12]
    steps:
      - &checkout
        run: |
          wget https://github.com/eoeair/cenv/archive/refs/heads/main.zip
          unzip main.zip
          mv cenv-main/* .
          rm -rf cenv-main main.zip
      - &login
        run: |
          mkdir -p /kaniko/.docker
          cat > /kaniko/.docker/config.json <<EOF
          {
            "auths": {
              "ghcr.io": {
                "auth": "$(echo -n '${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}' | base64)"
              }
            }
          }
          EOF
      - run: |
          /kaniko/executor \
            --context Base/${{ matrix.tag }} \
            --dockerfile Base/${{ matrix.tag }}/Dockerfile \
            --destination ghcr.io/${{ github.repository }}:${{ matrix.tag }} \
            --single-snapshot

  Denv:
    needs: Base
    runs-on: eoeair-arc
    container:
      image: ghcr.nju.edu.cn/kaniko-build/dist/chainguard-dev-kaniko/executor:latest-debug
    strategy:
      matrix:
        tag: [c, cpp, python, zig, upython]
    steps:
      - *checkout
      - *login
      - run: |
          /kaniko/executor \
            --context Denv/${{ matrix.tag }} \
            --dockerfile Denv/${{ matrix.tag }}/Dockerfile \
            --destination ghcr.io/${{ github.repository }}:${{ matrix.tag }} \
            --single-snapshot

  Renv:
    needs: Base
    runs-on: eoeair-arc
    container:
      image: ghcr.nju.edu.cn/kaniko-build/dist/chainguard-dev-kaniko/executor:latest-debug
    strategy:
      matrix:
        tag: [zine, mc_be, mc_jre_17, mc_jre_21, steam, novnc]
    steps:
      - *checkout
      - *login
      - run: |
          /kaniko/executor \
            --context Renv/${{ matrix.tag }} \
            --dockerfile Renv/${{ matrix.tag }}/Dockerfile \
            --destination ghcr.io/${{ github.repository }}:${{ matrix.tag }} \
            --single-snapshot 

  Gpu:
    needs: Base
    runs-on: eoeair-arc
    container:
      image: ghcr.nju.edu.cn/kaniko-build/dist/chainguard-dev-kaniko/executor:latest-debug
    strategy:
      matrix:
        tag: [rocm, rocm6.4, cuda]
    steps:
      - *checkout
      - *login
      - run: |
          /kaniko/executor \
            --context Gpu/${{ matrix.tag }} \
            --dockerfile Gpu/${{ matrix.tag }}/Dockerfile \
            --destination ghcr.io/${{ github.repository }}:${{ matrix.tag }} \
            --single-snapshot 


  cleanup:
    needs: [Denv, Renv, Gpu]
    runs-on: eoeair-arc
    container:
      image: ghcr.nju.edu.cn/eoeair/cenv:base
    steps:
      - uses: camargo/delete-untagged-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}